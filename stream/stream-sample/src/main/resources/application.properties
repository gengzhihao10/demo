spring.application.name=stream-sample
#绑定channel到broadcast
spring.cloud.stream.bindings.myTopic-consumer.destination=broadcast
spring.cloud.stream.bindings.myTopic-producer.destination=broadcast

#消息分组
spring.cloud.stream.bindings.group-consumer.destination=group-topic
spring.cloud.stream.bindings.group-consumer.group=Group-B
#消费分区配置
spring.cloud.stream.bindings.group-consumer.consumer.partitioned=true
spring.cloud.stream.bindings.group-producer.destination=group-topic
#2个消费分区
spring.cloud.stream.bindings.group-producer.producer.partition-count=2
#SpEL(Key Resolver)
#只有索引参数为1的节点(消费者)，才能消费消息
spring.cloud.stream.bindings.group-producer.producer.partition-key-expression=1
#当前消费者实例总数
spring.cloud.stream.instance-count=2
#最大值instanceCount - 1，当前实例的索引号
spring.cloud.stream.instance-index=1

#延迟消息配置
#spring.cloud.stream.bindings.delayed-test-consumer.destination=delayed-test-topic
#spring.cloud.stream.bindings.delayed-test-producer.destination=delayed-test-topic
#spring.cloud.stream.rabbit.bindings.delayed-test-producer.producer.delayed-exchange=true

#异常消息(单机版)
spring.cloud.stream.bindings.error-consumer.destination=error-out-topic
spring.cloud.stream.bindings.error-producer.destination=error-out-topic
#重试次数(本机重试，不发回mq)(次数等于1相当于不重试)
spring.cloud.stream.bindings.error-consumer.consumer.max-attempts=1

#异常消息(requeue重试)
spring.cloud.stream.bindings.requeue-consumer.destination=requeue-topic
spring.cloud.stream.bindings.requeue-producer.destination=requeue-topic
#仅对当前requeue-consumer，开启requeue
spring.cloud.stream.rabbit.bindings.requeue-consumer.consumer.requeueRejected=true
#默认全局开启requeue
spring.rabbitmq.listener.defaul-requeue-rejected=true
#和requeue属性冲突，指定成1可避免冲突(1表示不本机重试)
spring.cloud.stream.bindings.requeue-consumer.consumer.max-attempts=1
spring.cloud.stream.bindings.requeue-consumer.group=RequeueGroup

server.port=50002
server.rabbitmq.host=localhost
server.rabbitmq.password=guest
server.rabbitmq.port=5672
server.rabbitmq.username=guest



management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=*
management.security.enabled=false
